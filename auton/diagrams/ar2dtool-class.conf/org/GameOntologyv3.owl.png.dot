digraph ar2dtool_diagram { 
rankdir=LR;
size="1000"
node [shape = ellipse, color="black"]; "http://purl.org/net/VideoGameOntology#GameEvent" "http://purl.org/net/VideoGameOntology#Item" "http://purl.org/net/VideoGameOntology#Veteran" "http://purl.org/net/VideoGameOntology#Achievement" "NULL" "http://purl.org/net/VideoGameOntology#GameProduct" "http://purl.org/net/VideoGameOntology#Loyalty" "http://purl.org/net/VideoGameOntology#Tutorial" "http://purl.org/net/VideoGameOntology#HardMode" "http://purl.org/net/VideoGameOntology#Character" "http://xmlns.com/foaf/0.1/Agent" "http://purl.org/net/VideoGameOntology#Leaderboard" "http://purl.org/net/VideoGameOntology#Luck" "http://purl.org/net/VideoGameOntology#Minigame" "http://purl.org/net/VideoGameOntology#Completion" "http://purl.org/net/VideoGameOntology#PlayerEvent" "http://schema.org/Product" "http://purl.org/net/VideoGameOntology#Multiplayer" "http://purl.org/net/VideoGameOntology#Virtuosity" "http://purl.org/net/VideoGameOntology#Paragon" "owl:Thing" "http://dbpedia.org/ontology/PopulatedPlace" "http://purl.org/net/VideoGameOntology#InstantaneousEvent" "http://purl.org/net/VideoGameOntology#GainEvent" "http://purl.org/net/VideoGameOntology#Player" "http://purl.org/net/VideoGameOntology#Feature" "http://purl.org/net/VideoGameOntology#Session" "http://purl.org/goodrelations/v1#ProductOrService" "http://purl.org/net/VideoGameOntology#InAppPurchaseEvent" "http://purl.org/net/VideoGameOntology#LoseEvent" "http://purl.org/net/VideoGameOntology#Genre" "http://purl.org/net/VideoGameOntology#Curiosity" "http://purl.org/net/VideoGameOntology#SpecialPlayStyle" "http://purl.org/net/VideoGameOntology#Fandom" "http://purl.org/net/VideoGameOntology#MenuEvent" "http://purl.org/net/VideoGameOntology#Game" "http://purl.org/net/VideoGameOntology#PlayingArea" "http://purl.org/net/VideoGameOntology#Collection" ; /*classes style*/
node [shape = rectangle, color="red"]; "has feature@en" "The vgo:hasFeature property indicates what is a vgo:Feature (or ability) of a particular vgo:Item. For example, a fire sword, a healing staff or boots of flight connects item to a feature it can have. An item with connection to potable feature would make the item potable.@en" "Character@en" "A vgo:Character is any actor that can exists in a game. A character  can be a human-like creature as seen traditionally in video games. However, a character could also be a car, a paddle in game of Pong or spaceship of a space shooter game. This is often contextually related to the gameplay of a certain game. A character can be either controller by a player or by a computer.@en" "start time@en" "startTime describes the starting moment in time of a single Session. startTime connects the session to a DateTime value which holds the moment when the session started.@en" "http://delicias.dia.fi.upm.es/members/DGarijo/#me^^http://www.w3.org/2001/XMLSchema#anyURI" "vgo" "http://www.mendeley.com/profiles/janne-parkkila/^^http://www.w3.org/2001/XMLSchema#anyURI" "The Video Game Ontology@en" "2013-10-22^^http://www.w3.org/2001/XMLSchema#date" "The Video Game Ontology is an ontology designed for describing video games and all the resources related to their game plays.@en" "An ontology for describing video games and game plays. Created by Janne Parkkila, Filip Radulovic, Daniel Garijo and Mar?a Poveda.@en" "http://purl.org/net/mpoveda^^http://www.w3.org/2001/XMLSchema#anyURI" "http://filip.milstan.net/^^http://www.w3.org/2001/XMLSchema#anyURI" "http://creativecommons.org/licenses/by-nc-sa/2.0/" "1.0" "http://purl.org/net/VideoGameOntology#" "is event associated to player@en" "The vgo:isEventAssociatedToPlayer property asserts an event to a specific vgo:Player. A player may have caused an event to happen through the actions of his/her character and this property is used to connect the real person to the event.@en" "Completion@en" "The vgo:Completion type of achievement is usually rewarded from successfully completing a certain goal or subgoal in a game. An example of vgo:Completion would be to save a princess from a burning tower or completing all side-quests in a game.@en" "owns item@en" "The vgo:ownsItem describes ownership of an item. A vgo:Item is always owned by a certain vgo:Character. A vgo:Character can own multiple vgo:Items and this relationship is used to keep track of the character?s owned items. Even though players may lose items, the vgo:ownsItem connection is still held with the item. This approach allows to keep track of character?s history of owned items.@en" "game product@en" "A vgo:GameProduct is anything that is for sale inside a game. These can be either normal game items purchased with in-game currency or with real world money. An example of vgo:GameProduct could be a consumable health potion bought with real money, a better weapon or some visual improvement (e.g. Hats in Steam). Basically a game product can be anything, a character, an item or an achievement.
GameProduct is a subclass of Good Relations: ProductOrService & schema:Product. Since vgo:GameProduct is a type of buyable product, it reuses the properties available in the schema and Good Relations, such as currency price, validity of the offer and so on.@en" "is event triggered by character@en" "The vgo:isEventTriggeredByCharacter connects the vgo:InstantaneousEvent to specific vgo:Character. This describes that an event is often caused by a character. The character in question can be either a character controlled by a player or a computer. For example, both player and non-player characters can trigger a character death event.@en" "Game@en" "The vgo:Game class describes a game product that can be played by a player.
Examples of games are Pong, Grand Theft Auto, Pokemon and Need for Speed.@en" "involves player@en" "The vgo:involvesPlayer property specifies that a session involves a specific player. A session may involve more than one player.@en" "optional@en" "Minigame@en" "The vgo:Minigame achievement describes success in mini-games that have been included in a certain game but are not vital for completing the game. An example could be to complete all the Pizza deliveries in GTA minigame or gaining over 100 dollars while playing poker in Red Dead Redemption.@en" "is friend with player@en" "The vgo:isFriendWithPlayer describes a connection between players. The property is used to model the friends a player has and with whom he might be playing games with. The friends of a player are not bound necessarily to particular game, but can be describe the friendly playing relationship in overall.@en" "purchases game offering@en" "The vgo:purchasesGameOffering property aseerts a vgo:InAppPurchaseEvent to a specific vgo:GameProduct. This property describes what is purchased by the in-app purchase event that the player has done.@en" "Paragon@en" "The vgo:Paragon is a rare achievement that is given only to limited number of players. An example of vgo:Paragon achievement could be the first player to finish a game under 10 hours or the first ten players to complete the game 100% through.@en" "owns achievement@en" "The vgo:ownsAchievement links the vgo:Player to the particular vgo:Achievement earned in a game.@en" "is event in game@en" "The vgo:isEventInGame property asserts an event to a specific game. An event always happens inside a specific a game.@en" "username@en" "The username connects player to a text string which describes the username a player has.@en" "plays game@en" "the vgo:playsGame property asserts which games has the vgo:Player played at any point of time.@en" "has leaderboard@en" "The vgo:hasLeaderboard specifies that a leaderboard belongs to a particular game. A game can have one or more leaderboards that keep track of ranking of the players. For example a leaderboard could be ranking of who has the most soccer game victories or who has the fastest lap in a Formula 1 game.@en" "Veteran@en" "The vgo:Veteran achievement is an award that is given for accumulating a lot of play hours or game actions. For example, vgo:Veteran could be playing thousand hours of World of Tanks or making 100 goals in ice hockey game.@en" "lose event@en" "vgo:LoseEvent describes an event that is related to character/player losing something in a game. This is a subclass of GameEvent as gaining something is related to a specific game. For example, a player can lose a character due to trade with another player. Another example would be a character losing item due to consuming it.@en" "has game genre@en" "The vgo:hasGameGenre property specifies that a game belongs to a certain game genre. For example, Pong would be an arcade game and Mario a platformer.@en" "playing area@en" "The vgo:PlayingArea is the description of a place where the gameplay takes place. All of the games have some kind of area where they are played in. An example of playing areas could be football field in soccer game, a race track from a racing game or a star system of EVE Online.@en" "involves character@en" "The vgo:involvesCharacter property specifies that a session involves a specific character.@en" "optional@en" "release date@en" "releaseDate connects a game to a time which describes the release date of the game.@en" "is achievement in game@en" "The property vgo:isAchievementInGame asserts that a specific vgo:Achievement can be earned in a particular vgo:Game. An achievement must belong to a certain game.@en" "hard mode@en" "The vgo:HardMode achievement describes succeeding in a game on a high difficulty level. An example could be completing the ?Doom? game on Nightmare difficulty level.@en" "game event@en" "The vgo:GameEvent describes an event that takes place in a game without straight player interaction. GameEvents are often very specific for each game. Examples of vgo:GameEvent could be an enemy dying, connecting to a multiplayer server, loading a new level or playing an animation.@en" "Achievement@en" "The vgo:Achievement is a reward gained in a game due to some event accomplished in the game. Achievements are commonly used in game industry to reward players for having accomplished tasks in the game. 
This ontology defines various subclasses of vgo:Achievement, which are all based on the classification presented by Markus Montola et al. [Markus Montola, Timo Nummenmaa, Andr?s Lucero, Marion Boberg, and Hannu Korhonen, 2009, ?Applying game achievement systems to enhance user experience in a photo sharing service?, In Proceedings of the 13th International MindTrek Conference: Everyday Life in the Ubiquitous Era (MindTrek '09)] http://dl.acm.org/citation.cfm?id=1621859@en" "lives in@en" "The vgo:livesIn describes the connection between a player and his place of existence in the real-world. A vgo:Player is connected to wgs84:SpatialThing as that has descriptions for places where people live and contains more detailed information of them, such as continents and regions.@en" "Item@en" "A vgo:Item portrays any item that exists in a game. The item can either be just visual part of the game or a concrete usable item. As an example an item could be a drinkable potion, a magical sword or just a flower pot.@en" "is character in game@en" "vgo:isCharacterInGame property describes the relation between a vgo:Character and a vgo:Game. a vgo:Character always belongs to a certain game.@en" "has item@en" "The vgo:hasItem property specifies that a game has a specific item. A game often contains more than one items.@en" "optional@en" "is item in game@en" "The vgo:isItemInGame is used to specify which item belongs to a particular game. An item cannot exist alone and thus should always be associated to a certain game.@en" "special play style@en" "The vgo:SpecialPlayStyle achievement is awarded to players after playing a game in special fashion. Often this is something harder than the regular play and requires more player experience to excel in it. An example of vgo:SpecialPlayStyle could be to complete a game without any violence or against a timer.@en" "Tutorial@en" "The vgo:Tutorial achievement is  awarded to a player for trying out various features of the game. This is often related to learning how to play the game, how the controls work and how the game logic works. An example of vgo:Tutorial could be testing out newly gained special equipment or just playing through the in-game tutorial in the beginning.@en" "owns character@en" "The vgo:ownsCharacter property asserts which characters are owned by a specific player. A player can have multiple characters in one game and this connection is used to define all the different characters a player could be playing. Even though a player deletes, trades or loses his/her character in any way, the connection can be kept to contain the player?s history of owned characters.@en" "Virtuosity@en" "The vgo:Virtuosity describes an achievement that is awarded for playing masterfully in the game. Examples of virtuous play could be finishing the game without saving at all, dying zero times or preventing an opposing team from scoring any goals in a soccer game.@en" "Fandom@en" "The vgo:Fandom achievement is related to doing some true fan activities. An example of vgo:Fandom could be purchasing a collectors edition of the game or attending a fan gathering.@en" "Player@en" "The vgo:Player describes the entity playing the game. This can be either a human or a computer. vgo:Player class is used to keep a profile of a certain playing entity and to connect all the games, achievements and characters he/she has. The vgo:Player is a subclass of foaf:Person as it contains all relative information of a certain person.@en" "Luck@en" "The vgo:Lucky describes an achievement that is awarded to the player in a lucky situation. An example of vgo:Lucky achievement would be winning in a lottery or throwing ?Yahtzee? without re-rolling the dice.@en" "Curiosity@en" "The vgo:Curiosity describes funny random things that can happen or be found in the game. An example could be jumping from the Eiffel tower without dying or following a comupter controlled character?s activities for one hour.@en" "Genre@en" "The vgo:Genre class describes the genre a game belongs to. All of the games have at least one genre. Examples of this are RPG, Simulator and Adventure@en" "Loyalty@en" "The vgo:Loyalty achievement is used to give recognition to loyal players. For example, this could be an achievement received after subscribing to the game for a year.@en" "end time@en" "endTime describes the ending moment in time of a single Session. endTime connects the session to a DateTime value which holds the moment when the session ended.@en" "gain event@en" "The vgo:GainEvent describes an event that is related to character/player gaining something in a game. This is a subclass of vgo:GameEvent as gaining something is related to a specific game. For example, a player can gain a new character, achievement or item.@en" "is achieved in session@en" "The property vgo:isAchievedInSession asserts the receiving of an achievement to a certain gameplay session. This enables to keep track of what achievements a player has gained during one gameplay session.@en" "Multiplayer@en" "The vgo:Multiplayer achievement describes anything that can be awarded to one or multiple players due to their gameplay in multiplayer. For example, this could be winning 10 Team Fortress matches in a row with the same team or getting killed ten times in a row in Counter-Strike.@en" "event name@en" "name connects InstantaneousEvent a text string. This allows the event to have a name to recognize it for.@en" "is player in session@en" "The vgo:isPlayerInSession property connects vgo:Player to a specific vgo:Session. This property is used to keep track of the gameplay sessions the player has played and what has happened in those sessions. For example vgo:Player may have participated in a this can be a one round of Counter-Strike or played one hour session of mario.@en" "Leaderboard@en" "The vgo:Leaderboard class describes a ranking system of the players. There can be multiple rankings in a game, for example, the kill-count ranking of Modern Warfare or the best time listing of Formula 1 game.@en" "event time@en" "time describes the connection of InstantaneousEvent happening at a certain moment of time. time Conncets the event to a DateTime value that describes the moment when the event happened.@en" "in-app purchase event@en" "The vgo:InAppPurchaseEvent describes an event that is related to making a purchase with real money inside a game. This is a subclass of InstantaneousEvent because it happens at certain moment in time. An example of vgo:InAppPurchaseEvent would be unlocking secret levels with real money or purchasing better equipment with real money.@en" "is event in session@en" "The vgo:isEventInSession property links an event to a specific gameplay session. An event always happens during a certain session and this property enables to link the events to that session. For example, an event of moving the queen in game of chess should be connected to a session of chess.@en" "is leaderboard in game@en" "The vgo:isLeaderboardInGame property specifies that a leaderboard is from a specific game.@en" "optional@en" "has playing area@en" "The vgo:hasPlayingArea property asserts a gaming area to a specific game. In every game, the gameplay takes place in some playing area.@en" "has character@en" "The vgo:hasCharacter property specifies that a game has a specific character. A game can have more than one characters involved.@en" "optional@en" "involves achievement@en" "The vgo:involvesPlayer property specifies that a session involves a specific player. A session may involve more than one player.@en" "optional@en" "Session@en" "The vgo:Session class describes a session of gameplay. A session can be a single round of chess, a round of Counter-Strike, one half-time of soccer or one race of Formula 1. vgo:Session class can be used to store gameplay information, especially for analytical reasons.@en" "Feature@en" "vgo:Feature describes an ability or characteristic. For example, a sword could have ?damage dealing? ability and a bottle of water could be ?potable?.@en" "is event related to item@en" "The vgo:isEventRelatedToItem property asserts an event to a specific item. This property is used to describe an event that includes an item in one way or another. For example, an event where character gains a new sword can be described with this relation.@en" "unlocks achievement@en" "The vgo:unlocksAchievement property asserts an event to a certain achievement. An achievement is always unlocked as a consequence of some event. For example, eating the 100th piece of cake unlocks the ?Cake Eater? achievement.@en" "Collection@en" "The vgo:Collection type of achievement is typically rewarded from collecting an amount of certain items in a game. An example of vgo:Collection would be obtaining a full set of christmas clothes for a character to wear or collecting every possible flower in the game.@en" "instantaneous event@en" "The vgo:InstantaneousEvent class describes an event that happens during the gameplay at a certain moment in time. This can be a player gaining an achievement, killing an enemy or making an in-app purchase.@en" "menu event@en" "The vgo:MenuEvent describes an event that is related to interacting with the ingame menu. An example of menu event is muting sounds, changing graphic settings, changing gameplay difficulty or remapping game controls.@en" "is session in game@en" "The vgo:isSessionInGame property links a vgo:Session to a certain vgo:Game. Each gameplay session must belong to a certain game.@en" "has achievement@en" "The vgo:hasAchievement property specifies that a game has a specific achievement. A game often contains more than one achievement that can be awarded to the players.@en" "optional@en" "is character in session@en" "The vgo:isCharacterInSession property connects the vgo:Character to a vgo:Session. A character participates in a game session (e.g., a football match or a counter strike round) during a period of time. As players can have multiple characters, a character needs to be connected to the session, in order to know which of those characters participated in the certain session.@en" "player event@en" "The vgo:PlayerEvent describes a vgo:InstantaneousEvent that is caused by the player. For example jumping in the game, throwing an item or pressing a joystick button.@en" ; /*literals style*/
"http://purl.org/net/VideoGameOntology#eventTime" "http://purl.org/net/VideoGameOntology#eventName" "http://purl.org/net/VideoGameOntology#endTime" "http://purl.org/net/VideoGameOntology#releaseDate" "http://purl.org/net/VideoGameOntology#username" "http://purl.org/net/VideoGameOntology#startTime" node [shape = null, color="null"]; "http://purl.org/net/VideoGameOntology#eventTime" "http://purl.org/net/VideoGameOntology#eventName" "http://purl.org/net/VideoGameOntology#endTime" "http://purl.org/net/VideoGameOntology#releaseDate" "http://purl.org/net/VideoGameOntology#username" "http://purl.org/net/VideoGameOntology#startTime" ; /*data type properties style*/
	"http://xmlns.com/foaf/0.1/knows" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#hasFeature" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#hasFeature" -> "has feature@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#hasFeature" -> "The vgo:hasFeature property indicates what is a vgo:Feature (or ability) of a particular vgo:Item. For example, a fire sword, a healing staff or boots of flight connects item to a feature it can have. An item with connection to potable feature would make the item potable.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Character" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Character" -> "Character@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Character" -> "A vgo:Character is any actor that can exists in a game. A character  can be a human-like creature as seen traditionally in video games. However, a character could also be a car, a paddle in game of Pong or spaceship of a space shooter game. This is often contextually related to the gameplay of a certain game. A character can be either controller by a player or by a computer.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#startTime" -> "owl:DatatypeProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#startTime" -> "start time@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#startTime" -> "startTime describes the starting moment in time of a single Session. startTime connects the session to a DateTime value which holds the moment when the session started.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology" -> "http://delicias.dia.fi.upm.es/members/DGarijo/#me^^http://www.w3.org/2001/XMLSchema#anyURI" [ label = ":creator" ];
	"http://purl.org/net/VideoGameOntology" -> "vgo" [ label = ":preferredNamespacePrefix" ];
	"http://purl.org/net/VideoGameOntology" -> "http://www.mendeley.com/profiles/janne-parkkila/^^http://www.w3.org/2001/XMLSchema#anyURI" [ label = ":creator" ];
	"http://purl.org/net/VideoGameOntology" -> "The Video Game Ontology@en" [ label = ":title" ];
	"http://purl.org/net/VideoGameOntology" -> "2013-10-22^^http://www.w3.org/2001/XMLSchema#date" [ label = ":created" ];
	"http://purl.org/net/VideoGameOntology" -> "owl:Ontology" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology" -> "The Video Game Ontology is an ontology designed for describing video games and all the resources related to their game plays.@en" [ label = ":description" ];
	"http://purl.org/net/VideoGameOntology" -> "An ontology for describing video games and game plays. Created by Janne Parkkila, Filip Radulovic, Daniel Garijo and Mar?a Poveda.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology" -> "http://purl.org/net/mpoveda^^http://www.w3.org/2001/XMLSchema#anyURI" [ label = ":creator" ];
	"http://purl.org/net/VideoGameOntology" -> "http://filip.milstan.net/^^http://www.w3.org/2001/XMLSchema#anyURI" [ label = ":creator" ];
	"http://purl.org/net/VideoGameOntology" -> "http://creativecommons.org/licenses/by-nc-sa/2.0/" [ label = ":license" ];
	"http://purl.org/net/VideoGameOntology" -> "1.0" [ label = "owl:versionInfo" ];
	"http://purl.org/net/VideoGameOntology" -> "http://purl.org/net/VideoGameOntology#" [ label = ":preferredNamespaceUri" ];
	"http://purl.org/net/VideoGameOntology#isEventAssociatedToPlayer" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isEventAssociatedToPlayer" -> "is event associated to player@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isEventAssociatedToPlayer" -> "The vgo:isEventAssociatedToPlayer property asserts an event to a specific vgo:Player. A player may have caused an event to happen through the actions of his/her character and this property is used to connect the real person to the event.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Completion" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Completion" -> "Completion@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Completion" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Completion" -> "The vgo:Completion type of achievement is usually rewarded from successfully completing a certain goal or subgoal in a game. An example of vgo:Completion would be to save a princess from a burning tower or completing all side-quests in a game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#ownsItem" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#ownsItem" -> "owns item@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#ownsItem" -> "The vgo:ownsItem describes ownership of an item. A vgo:Item is always owned by a certain vgo:Character. A vgo:Character can own multiple vgo:Items and this relationship is used to keep track of the character?s owned items. Even though players may lose items, the vgo:ownsItem connection is still held with the item. This approach allows to keep track of character?s history of owned items.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#GameProduct" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#GameProduct" -> "game product@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#GameProduct" -> "http://purl.org/goodrelations/v1#ProductOrService" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#GameProduct" -> "http://schema.org/Product" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#GameProduct" -> "56243522:14cd1007c04:-7ffc" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#GameProduct" -> "A vgo:GameProduct is anything that is for sale inside a game. These can be either normal game items purchased with in-game currency or with real world money. An example of vgo:GameProduct could be a consumable health potion bought with real money, a better weapon or some visual improvement (e.g. Hats in Steam). Basically a game product can be anything, a character, an item or an achievement.
GameProduct is a subclass of Good Relations: ProductOrService & schema:Product. Since vgo:GameProduct is a type of buyable product, it reuses the properties available in the schema and Good Relations, such as currency price, validity of the offer and so on.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isEventTriggeredByCharacter" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isEventTriggeredByCharacter" -> "is event triggered by character@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isEventTriggeredByCharacter" -> "The vgo:isEventTriggeredByCharacter connects the vgo:InstantaneousEvent to specific vgo:Character. This describes that an event is often caused by a character. The character in question can be either a character controlled by a player or a computer. For example, both player and non-player characters can trigger a character death event.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "Game@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "The vgo:Game class describes a game product that can be played by a player.
Examples of games are Pong, Grand Theft Auto, Pokemon and Need for Speed.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#involvesPlayer" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#involvesPlayer" -> "involves player@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#involvesPlayer" -> "The vgo:involvesPlayer property specifies that a session involves a specific player. A session may involve more than one player.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#involvesPlayer" -> "optional@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Minigame" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Minigame" -> "Minigame@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Minigame" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Minigame" -> "The vgo:Minigame achievement describes success in mini-games that have been included in a certain game but are not vital for completing the game. An example could be to complete all the Pizza deliveries in GTA minigame or gaining over 100 dollars while playing poker in Red Dead Redemption.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isFriendWithPlayer" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isFriendWithPlayer" -> "owl:SymmetricProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isFriendWithPlayer" -> "is friend with player@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isFriendWithPlayer" -> "The vgo:isFriendWithPlayer describes a connection between players. The property is used to model the friends a player has and with whom he might be playing games with. The friends of a player are not bound necessarily to particular game, but can be describe the friendly playing relationship in overall.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isFriendWithPlayer" -> "http://xmlns.com/foaf/0.1/knows" [ label = "rdfs:subPropertyOf" ];
	"http://purl.org/net/VideoGameOntology#purchasesGameOffering" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#purchasesGameOffering" -> "purchases game offering@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#purchasesGameOffering" -> "The vgo:purchasesGameOffering property aseerts a vgo:InAppPurchaseEvent to a specific vgo:GameProduct. This property describes what is purchased by the in-app purchase event that the player has done.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Paragon" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Paragon" -> "Paragon@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Paragon" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Paragon" -> "The vgo:Paragon is a rare achievement that is given only to limited number of players. An example of vgo:Paragon achievement could be the first player to finish a game under 10 hours or the first ten players to complete the game 100% through.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#ownsAchievement" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#ownsAchievement" -> "owns achievement@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#ownsAchievement" -> "The vgo:ownsAchievement links the vgo:Player to the particular vgo:Achievement earned in a game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isEventInGame" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isEventInGame" -> "is event in game@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isEventInGame" -> "The vgo:isEventInGame property asserts an event to a specific game. An event always happens inside a specific a game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#username" -> "owl:DatatypeProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#username" -> "username@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#username" -> "The username connects player to a text string which describes the username a player has.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#playsGame" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#playsGame" -> "plays game@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#playsGame" -> "the vgo:playsGame property asserts which games has the vgo:Player played at any point of time.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#hasLeaderboard" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#hasLeaderboard" -> "has leaderboard@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#hasLeaderboard" -> "The vgo:hasLeaderboard specifies that a leaderboard belongs to a particular game. A game can have one or more leaderboards that keep track of ranking of the players. For example a leaderboard could be ranking of who has the most soccer game victories or who has the fastest lap in a Formula 1 game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#hasLeaderboard" -> "http://purl.org/net/VideoGameOntology#isLeaderboardInGame" [ label = "owl:inverseOf" ];
	":creator" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Veteran" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Veteran" -> "Veteran@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Veteran" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Veteran" -> "The vgo:Veteran achievement is an award that is given for accumulating a lot of play hours or game actions. For example, vgo:Veteran could be playing thousand hours of World of Tanks or making 100 goals in ice hockey game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#LoseEvent" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#LoseEvent" -> "lose event@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#LoseEvent" -> "http://purl.org/net/VideoGameOntology#GameEvent" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#LoseEvent" -> "vgo:LoseEvent describes an event that is related to character/player losing something in a game. This is a subclass of GameEvent as gaining something is related to a specific game. For example, a player can lose a character due to trade with another player. Another example would be a character losing item due to consuming it.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#hasGameGenre" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#hasGameGenre" -> "has game genre@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#hasGameGenre" -> "The vgo:hasGameGenre property specifies that a game belongs to a certain game genre. For example, Pong would be an arcade game and Mario a platformer.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#PlayingArea" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#PlayingArea" -> "playing area@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#PlayingArea" -> "The vgo:PlayingArea is the description of a place where the gameplay takes place. All of the games have some kind of area where they are played in. An example of playing areas could be football field in soccer game, a race track from a racing game or a star system of EVE Online.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#involvesCharacter" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#involvesCharacter" -> "involves character@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#involvesCharacter" -> "The vgo:involvesCharacter property specifies that a session involves a specific character.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#involvesCharacter" -> "optional@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#releaseDate" -> "owl:DatatypeProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#releaseDate" -> "release date@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#releaseDate" -> "releaseDate connects a game to a time which describes the release date of the game.@en" [ label = "rdfs:comment" ];
	":creator" -> "owl:AnnotationProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isAchievementInGame" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isAchievementInGame" -> "is achievement in game@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isAchievementInGame" -> "The property vgo:isAchievementInGame asserts that a specific vgo:Achievement can be earned in a particular vgo:Game. An achievement must belong to a certain game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isAchievementInGame" -> "http://purl.org/net/VideoGameOntology#hasAchievement" [ label = "owl:inverseOf" ];
	"http://purl.org/net/VideoGameOntology#HardMode" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#HardMode" -> "hard mode@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#HardMode" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#HardMode" -> "The vgo:HardMode achievement describes succeeding in a game on a high difficulty level. An example could be completing the ?Doom? game on Nightmare difficulty level.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#GameEvent" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#GameEvent" -> "game event@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#GameEvent" -> "http://purl.org/net/VideoGameOntology#InstantaneousEvent" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#GameEvent" -> "The vgo:GameEvent describes an event that takes place in a game without straight player interaction. GameEvents are often very specific for each game. Examples of vgo:GameEvent could be an enemy dying, connecting to a multiplayer server, loading a new level or playing an animation.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Achievement" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Achievement" -> "Achievement@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Achievement" -> "The vgo:Achievement is a reward gained in a game due to some event accomplished in the game. Achievements are commonly used in game industry to reward players for having accomplished tasks in the game. 
This ontology defines various subclasses of vgo:Achievement, which are all based on the classification presented by Markus Montola et al. [Markus Montola, Timo Nummenmaa, Andr?s Lucero, Marion Boberg, and Hannu Korhonen, 2009, ?Applying game achievement systems to enhance user experience in a photo sharing service?, In Proceedings of the 13th International MindTrek Conference: Everyday Life in the Ubiquitous Era (MindTrek '09)] http://dl.acm.org/citation.cfm?id=1621859@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#livesIn" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#livesIn" -> "lives in@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#livesIn" -> "The vgo:livesIn describes the connection between a player and his place of existence in the real-world. A vgo:Player is connected to wgs84:SpatialThing as that has descriptions for places where people live and contains more detailed information of them, such as continents and regions.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Item" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Item" -> "Item@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Item" -> "A vgo:Item portrays any item that exists in a game. The item can either be just visual part of the game or a concrete usable item. As an example an item could be a drinkable potion, a magical sword or just a flower pot.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isCharacterInGame" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isCharacterInGame" -> "is character in game@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isCharacterInGame" -> "vgo:isCharacterInGame property describes the relation between a vgo:Character and a vgo:Game. a vgo:Character always belongs to a certain game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isCharacterInGame" -> "http://purl.org/net/VideoGameOntology#hasCharacter" [ label = "owl:inverseOf" ];
	"http://purl.org/net/VideoGameOntology#hasItem" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#hasItem" -> "has item@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#hasItem" -> "The vgo:hasItem property specifies that a game has a specific item. A game often contains more than one items.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#hasItem" -> "optional@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isItemInGame" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isItemInGame" -> "is item in game@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isItemInGame" -> "The vgo:isItemInGame is used to specify which item belongs to a particular game. An item cannot exist alone and thus should always be associated to a certain game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isItemInGame" -> "http://purl.org/net/VideoGameOntology#hasItem" [ label = "owl:inverseOf" ];
	"http://purl.org/net/VideoGameOntology#SpecialPlayStyle" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#SpecialPlayStyle" -> "special play style@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#SpecialPlayStyle" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#SpecialPlayStyle" -> "The vgo:SpecialPlayStyle achievement is awarded to players after playing a game in special fashion. Often this is something harder than the regular play and requires more player experience to excel in it. An example of vgo:SpecialPlayStyle could be to complete a game without any violence or against a timer.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Tutorial" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Tutorial" -> "Tutorial@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Tutorial" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Tutorial" -> "The vgo:Tutorial achievement is  awarded to a player for trying out various features of the game. This is often related to learning how to play the game, how the controls work and how the game logic works. An example of vgo:Tutorial could be testing out newly gained special equipment or just playing through the in-game tutorial in the beginning.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#ownsCharacter" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#ownsCharacter" -> "owns character@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#ownsCharacter" -> "The vgo:ownsCharacter property asserts which characters are owned by a specific player. A player can have multiple characters in one game and this connection is used to define all the different characters a player could be playing. Even though a player deletes, trades or loses his/her character in any way, the connection can be kept to contain the player?s history of owned characters.@en" [ label = "rdfs:comment" ];
	"http://purl.org/goodrelations/v1#ProductOrService" -> "owl:Class" [ label = "rdf:type" ];
	"owl:Thing" -> "owl:Class" [ label = "rdf:type" ];
	"NULL" -> "owl:Class" [ label = "rdf:type" ];
	"NULL" -> "http://purl.org/net/VideoGameOntology#Character" [ label = "rdf:first" ];
	"NULL" -> "56243522:14cd1007c04:-7ffa" [ label = "rdf:rest" ];
	"NULL" -> "http://purl.org/net/VideoGameOntology#PlayingArea" [ label = "rdf:first" ];
	"NULL" -> "56243522:14cd1007c04:-7ff9" [ label = "rdf:rest" ];
	"NULL" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdf:first" ];
	"NULL" -> "56243522:14cd1007c04:-7ffb" [ label = "owl:unionOf" ];
	"NULL" -> "56243522:14cd1007c04:-7ff8" [ label = "rdf:rest" ];
	"NULL" -> "rdf:nil" [ label = "rdf:rest" ];
	"NULL" -> "http://purl.org/net/VideoGameOntology#Item" [ label = "rdf:first" ];
	"NULL" -> "56243522:14cd1007c04:-7ff7" [ label = "rdf:rest" ];
	"NULL" -> "http://purl.org/net/VideoGameOntology#Game" [ label = "rdf:first" ];
	"http://purl.org/net/VideoGameOntology#Virtuosity" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Virtuosity" -> "Virtuosity@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Virtuosity" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Virtuosity" -> "The vgo:Virtuosity describes an achievement that is awarded for playing masterfully in the game. Examples of virtuous play could be finishing the game without saving at all, dying zero times or preventing an opposing team from scoring any goals in a soccer game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Fandom" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Fandom" -> "Fandom@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Fandom" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Fandom" -> "The vgo:Fandom achievement is related to doing some true fan activities. An example of vgo:Fandom could be purchasing a collectors edition of the game or attending a fan gathering.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "Player@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "http://xmlns.com/foaf/0.1/Agent" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "The vgo:Player describes the entity playing the game. This can be either a human or a computer. vgo:Player class is used to keep a profile of a certain playing entity and to connect all the games, achievements and characters he/she has. The vgo:Player is a subclass of foaf:Person as it contains all relative information of a certain person.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Luck" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Luck" -> "Luck@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Luck" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Luck" -> "The vgo:Lucky describes an achievement that is awarded to the player in a lucky situation. An example of vgo:Lucky achievement would be winning in a lottery or throwing ?Yahtzee? without re-rolling the dice.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Curiosity" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Curiosity" -> "Curiosity@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Curiosity" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Curiosity" -> "The vgo:Curiosity describes funny random things that can happen or be found in the game. An example could be jumping from the Eiffel tower without dying or following a comupter controlled character?s activities for one hour.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Genre" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Genre" -> "Genre@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Genre" -> "The vgo:Genre class describes the genre a game belongs to. All of the games have at least one genre. Examples of this are RPG, Simulator and Adventure@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Loyalty" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Loyalty" -> "Loyalty@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Loyalty" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Loyalty" -> "The vgo:Loyalty achievement is used to give recognition to loyal players. For example, this could be an achievement received after subscribing to the game for a year.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#endTime" -> "owl:DatatypeProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#endTime" -> "end time@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#endTime" -> "endTime describes the ending moment in time of a single Session. endTime connects the session to a DateTime value which holds the moment when the session ended.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#GainEvent" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#GainEvent" -> "gain event@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#GainEvent" -> "http://purl.org/net/VideoGameOntology#GameEvent" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#GainEvent" -> "The vgo:GainEvent describes an event that is related to character/player gaining something in a game. This is a subclass of vgo:GameEvent as gaining something is related to a specific game. For example, a player can gain a new character, achievement or item.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isAchievedInSession" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isAchievedInSession" -> "is achieved in session@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isAchievedInSession" -> "The property vgo:isAchievedInSession asserts the receiving of an achievement to a certain gameplay session. This enables to keep track of what achievements a player has gained during one gameplay session.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isAchievedInSession" -> "http://purl.org/net/VideoGameOntology#involvesAchievement" [ label = "owl:inverseOf" ];
	"http://purl.org/net/VideoGameOntology#Multiplayer" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Multiplayer" -> "Multiplayer@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Multiplayer" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Multiplayer" -> "The vgo:Multiplayer achievement describes anything that can be awarded to one or multiple players due to their gameplay in multiplayer. For example, this could be winning 10 Team Fortress matches in a row with the same team or getting killed ten times in a row in Counter-Strike.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#eventName" -> "owl:DatatypeProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#eventName" -> "event name@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#eventName" -> "name connects InstantaneousEvent a text string. This allows the event to have a name to recognize it for.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isPlayerInSession" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isPlayerInSession" -> "is player in session@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isPlayerInSession" -> "The vgo:isPlayerInSession property connects vgo:Player to a specific vgo:Session. This property is used to keep track of the gameplay sessions the player has played and what has happened in those sessions. For example vgo:Player may have participated in a this can be a one round of Counter-Strike or played one hour session of mario.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isPlayerInSession" -> "http://purl.org/net/VideoGameOntology#involvesPlayer" [ label = "owl:inverseOf" ];
	"http://xmlns.com/foaf/0.1/Agent" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Leaderboard" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Leaderboard" -> "Leaderboard@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Leaderboard" -> "owl:Thing" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Leaderboard" -> "The vgo:Leaderboard class describes a ranking system of the players. There can be multiple rankings in a game, for example, the kill-count ranking of Modern Warfare or the best time listing of Formula 1 game.@en" [ label = "rdfs:comment" ];
	"http://schema.org/Product" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#eventTime" -> "owl:DatatypeProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#eventTime" -> "event time@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#eventTime" -> "time describes the connection of InstantaneousEvent happening at a certain moment of time. time Conncets the event to a DateTime value that describes the moment when the event happened.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#InAppPurchaseEvent" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#InAppPurchaseEvent" -> "in-app purchase event@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#InAppPurchaseEvent" -> "http://purl.org/net/VideoGameOntology#InstantaneousEvent" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#InAppPurchaseEvent" -> "The vgo:InAppPurchaseEvent describes an event that is related to making a purchase with real money inside a game. This is a subclass of InstantaneousEvent because it happens at certain moment in time. An example of vgo:InAppPurchaseEvent would be unlocking secret levels with real money or purchasing better equipment with real money.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isEventInSession" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isEventInSession" -> "is event in session@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isEventInSession" -> "The vgo:isEventInSession property links an event to a specific gameplay session. An event always happens during a certain session and this property enables to link the events to that session. For example, an event of moving the queen in game of chess should be connected to a session of chess.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isLeaderboardInGame" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isLeaderboardInGame" -> "is leaderboard in game@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isLeaderboardInGame" -> "The vgo:isLeaderboardInGame property specifies that a leaderboard is from a specific game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isLeaderboardInGame" -> "optional@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#hasPlayingArea" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#hasPlayingArea" -> "has playing area@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#hasPlayingArea" -> "The vgo:hasPlayingArea property asserts a gaming area to a specific game. In every game, the gameplay takes place in some playing area.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#hasCharacter" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#hasCharacter" -> "has character@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#hasCharacter" -> "The vgo:hasCharacter property specifies that a game has a specific character. A game can have more than one characters involved.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#hasCharacter" -> "optional@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#involvesAchievement" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#involvesAchievement" -> "involves achievement@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#involvesAchievement" -> "The vgo:involvesPlayer property specifies that a session involves a specific player. A session may involve more than one player.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#involvesAchievement" -> "optional@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Session" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Session" -> "Session@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Session" -> "owl:Thing" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Session" -> "The vgo:Session class describes a session of gameplay. A session can be a single round of chess, a round of Counter-Strike, one half-time of soccer or one race of Formula 1. vgo:Session class can be used to store gameplay information, especially for analytical reasons.@en" [ label = "rdfs:comment" ];
	":contributor" -> "owl:AnnotationProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Feature" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Feature" -> "Feature@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Feature" -> "vgo:Feature describes an ability or characteristic. For example, a sword could have ?damage dealing? ability and a bottle of water could be ?potable?.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isEventRelatedToItem" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isEventRelatedToItem" -> "is event related to item@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isEventRelatedToItem" -> "The vgo:isEventRelatedToItem property asserts an event to a specific item. This property is used to describe an event that includes an item in one way or another. For example, an event where character gains a new sword can be described with this relation.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#unlocksAchievement" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#unlocksAchievement" -> "unlocks achievement@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#unlocksAchievement" -> "The vgo:unlocksAchievement property asserts an event to a certain achievement. An achievement is always unlocked as a consequence of some event. For example, eating the 100th piece of cake unlocks the ?Cake Eater? achievement.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Collection" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#Collection" -> "Collection@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#Collection" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#Collection" -> "The vgo:Collection type of achievement is typically rewarded from collecting an amount of certain items in a game. An example of vgo:Collection would be obtaining a full set of christmas clothes for a character to wear or collecting every possible flower in the game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "instantaneous event@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "The vgo:InstantaneousEvent class describes an event that happens during the gameplay at a certain moment in time. This can be a player gaining an achievement, killing an enemy or making an in-app purchase.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#MenuEvent" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#MenuEvent" -> "menu event@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#MenuEvent" -> "http://purl.org/net/VideoGameOntology#InstantaneousEvent" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#MenuEvent" -> "The vgo:MenuEvent describes an event that is related to interacting with the ingame menu. An example of menu event is muting sounds, changing graphic settings, changing gameplay difficulty or remapping game controls.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isSessionInGame" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isSessionInGame" -> "is session in game@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isSessionInGame" -> "The vgo:isSessionInGame property links a vgo:Session to a certain vgo:Game. Each gameplay session must belong to a certain game.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#hasAchievement" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#hasAchievement" -> "has achievement@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#hasAchievement" -> "The vgo:hasAchievement property specifies that a game has a specific achievement. A game often contains more than one achievement that can be awarded to the players.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#hasAchievement" -> "optional@en" [ label = "rdfs:comment" ];
	"http://dbpedia.org/ontology/PopulatedPlace" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isCharacterInSession" -> "owl:ObjectProperty" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#isCharacterInSession" -> "is character in session@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#isCharacterInSession" -> "The vgo:isCharacterInSession property connects the vgo:Character to a vgo:Session. A character participates in a game session (e.g., a football match or a counter strike round) during a period of time. As players can have multiple characters, a character needs to be connected to the session, in order to know which of those characters participated in the certain session.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#isCharacterInSession" -> "http://purl.org/net/VideoGameOntology#involvesCharacter" [ label = "owl:inverseOf" ];
	"http://purl.org/net/VideoGameOntology#PlayerEvent" -> "owl:Class" [ label = "rdf:type" ];
	"http://purl.org/net/VideoGameOntology#PlayerEvent" -> "player event@en" [ label = "rdfs:label" ];
	"http://purl.org/net/VideoGameOntology#PlayerEvent" -> "http://purl.org/net/VideoGameOntology#InstantaneousEvent" [ label = "rdfs:subClassOf" ];
	"http://purl.org/net/VideoGameOntology#PlayerEvent" -> "The vgo:PlayerEvent describes a vgo:InstantaneousEvent that is caused by the player. For example jumping in the game, throwing an item or pressing a joystick button.@en" [ label = "rdfs:comment" ];
	"http://purl.org/net/VideoGameOntology#Character" -> "http://purl.org/net/VideoGameOntology#Game" [ label = "http://purl.org/net/VideoGameOntology#isCharacterInGame" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "xsd:string" [ label = "http://purl.org/net/VideoGameOntology#username" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "xsd:dateTime" [ label = "http://purl.org/net/VideoGameOntology#eventTime" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "http://xmlns.com/foaf/0.1/Agent" [ label = ":creator" ];
	"http://purl.org/net/VideoGameOntology#Session" -> "http://purl.org/net/VideoGameOntology#Character" [ label = "http://purl.org/net/VideoGameOntology#involvesCharacter" ];
	"http://purl.org/net/VideoGameOntology#Session" -> "http://purl.org/net/VideoGameOntology#Player" [ label = "http://purl.org/net/VideoGameOntology#involvesPlayer" ];
	"http://purl.org/net/VideoGameOntology#Character" -> "http://purl.org/net/VideoGameOntology#Item" [ label = "http://purl.org/net/VideoGameOntology#ownsItem" ];
	"http://purl.org/net/VideoGameOntology#Session" -> "xsd:dateTime" [ label = "http://purl.org/net/VideoGameOntology#startTime" ];
	"http://purl.org/net/VideoGameOntology#Session" -> "xsd:dateTime" [ label = "http://purl.org/net/VideoGameOntology#endTime" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "xsd:dateTime" [ label = "http://purl.org/net/VideoGameOntology#releaseDate" ];
	"http://purl.org/net/VideoGameOntology#Session" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "http://purl.org/net/VideoGameOntology#involvesAchievement" ];
	"http://purl.org/net/VideoGameOntology#Item" -> "http://purl.org/net/VideoGameOntology#Game" [ label = "http://purl.org/net/VideoGameOntology#isItemInGame" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "http://purl.org/net/VideoGameOntology#Leaderboard" [ label = "http://purl.org/net/VideoGameOntology#hasLeaderboard" ];
	"http://purl.org/net/VideoGameOntology#Achievement" -> "http://purl.org/net/VideoGameOntology#Session" [ label = "http://purl.org/net/VideoGameOntology#isAchievedInSession" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "http://purl.org/net/VideoGameOntology#Session" [ label = "http://purl.org/net/VideoGameOntology#isEventInSession" ];
	"http://purl.org/net/VideoGameOntology#InAppPurchaseEvent" -> "http://purl.org/net/VideoGameOntology#GameProduct" [ label = "http://purl.org/net/VideoGameOntology#purchasesGameOffering" ];
	"http://purl.org/net/VideoGameOntology#Item" -> "http://purl.org/net/VideoGameOntology#Feature" [ label = "http://purl.org/net/VideoGameOntology#hasFeature" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "xsd:string" [ label = "http://purl.org/net/VideoGameOntology#eventName" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "http://purl.org/net/VideoGameOntology#Character" [ label = "http://purl.org/net/VideoGameOntology#ownsCharacter" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "http://dbpedia.org/ontology/PopulatedPlace" [ label = "http://purl.org/net/VideoGameOntology#livesIn" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "http://purl.org/net/VideoGameOntology#Player" [ label = "http://purl.org/net/VideoGameOntology#isEventAssociatedToPlayer" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "http://purl.org/net/VideoGameOntology#Item" [ label = "http://purl.org/net/VideoGameOntology#hasItem" ];
	"http://purl.org/net/VideoGameOntology#Character" -> "http://purl.org/net/VideoGameOntology#Session" [ label = "http://purl.org/net/VideoGameOntology#isCharacterInSession" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "http://purl.org/net/VideoGameOntology#ownsAchievement" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "http://purl.org/net/VideoGameOntology#Genre" [ label = "http://purl.org/net/VideoGameOntology#hasGameGenre" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "http://purl.org/net/VideoGameOntology#unlocksAchievement" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "http://purl.org/net/VideoGameOntology#Game" [ label = "http://purl.org/net/VideoGameOntology#isEventInGame" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "http://purl.org/net/VideoGameOntology#Session" [ label = "http://purl.org/net/VideoGameOntology#isPlayerInSession" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "http://purl.org/net/VideoGameOntology#Character" [ label = "http://purl.org/net/VideoGameOntology#hasCharacter" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "http://purl.org/net/VideoGameOntology#Game" [ label = "http://purl.org/net/VideoGameOntology#playsGame" ];
	"http://purl.org/net/VideoGameOntology#Achievement" -> "http://purl.org/net/VideoGameOntology#Game" [ label = "http://purl.org/net/VideoGameOntology#isAchievementInGame" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "http://purl.org/net/VideoGameOntology#Character" [ label = "http://purl.org/net/VideoGameOntology#isEventTriggeredByCharacter" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "http://purl.org/net/VideoGameOntology#Achievement" [ label = "http://purl.org/net/VideoGameOntology#hasAchievement" ];
	"http://purl.org/net/VideoGameOntology#InstantaneousEvent" -> "http://purl.org/net/VideoGameOntology#Item" [ label = "http://purl.org/net/VideoGameOntology#isEventRelatedToItem" ];
	"http://purl.org/net/VideoGameOntology#Leaderboard" -> "http://purl.org/net/VideoGameOntology#Game" [ label = "http://purl.org/net/VideoGameOntology#isLeaderboardInGame" ];
	"http://purl.org/net/VideoGameOntology#Session" -> "http://purl.org/net/VideoGameOntology#Game" [ label = "http://purl.org/net/VideoGameOntology#isSessionInGame" ];
	"http://purl.org/net/VideoGameOntology#Game" -> "http://purl.org/net/VideoGameOntology#PlayingArea" [ label = "http://purl.org/net/VideoGameOntology#hasPlayingArea" ];
	"http://purl.org/net/VideoGameOntology#Player" -> "http://purl.org/net/VideoGameOntology#Player" [ label = "http://purl.org/net/VideoGameOntology#isFriendWithPlayer" ];

}
