hasName: "Missing disjointness [1, 2, 3]"
hasCode: "P10"
hasDescription: "The ontology lacks disjoint axioms between classes or between properties that should be defined as disjoint. For example, we can create the classes \"Odd\" and \"Even\" (or the classes \"Prime\" and \"Composite\") without being disjoint; such representation is not correct based on the definition of these types of numbers."
hasNumberAffectedElements: "1"
hasImportanceLevel: "Important"
type: <http://www.oeg-upm.net/oops#pitfall>
====================
hasName: "Misusing ontology annotations"
hasCode: "P20"
hasDescription: "The contents of some annotation properties are swapped or misused. An example of this type of pitfall is to include in the Label annotation of the class \"Crossroads\" the following sentence \ufffd\ufffd\ufffdthe place of intersection of two or more roads\ufffd\ufffd\ufffd; and to include in the Comment annotation the word \'Crossroads\'."
hasNumberAffectedElements: "7"
hasImportanceLevel: "Minor"
type: <http://www.oeg-upm.net/oops#pitfall>
====================
hasName: "Missing annotations"
hasCode: "P08"
hasDescription: "Ontology terms lack annotations properties. This kind of properties improves the ontology understanding and usability from a user point of view."
hasNumberAffectedElements: "6"
hasImportanceLevel: "Minor"
type: <http://www.oeg-upm.net/oops#pitfall>
====================
hasName: "Merging different concepts in the same class"
hasCode: "P07"
hasDescription: "A class is created whose identifier is referring to two or more different concepts. An example of this type of pitfall is to create the class \"StyleAndPeriod\", or \"ProductOrService\"."
hasNumberAffectedElements: "1"
hasImportanceLevel: "Minor"
type: <http://www.oeg-upm.net/oops#pitfall>
====================
hasName: "Missing domain or range in properties"
hasCode: "P11"
hasDescription: "Relationships and/or attributes without domain or range (or none of them) are included in the ontology. There are situations in which the relation is very general and the range should be the most general concept \"Thing\". However, in other cases, the relations are more specific and it could be a good practice to specify its domain and/or range. An example of this type of pitfall is to create the relationship \"hasWritten\" in an ontology about art in which the relationship domain should be \"Writer\" and the relationship range should be \"LiteraryWork\". This pitfall is related to the common error when defining ranges and domains described in [3]."
hasNumberAffectedElements: "1"
hasImportanceLevel: "Important"
type: <http://www.oeg-upm.net/oops#pitfall>
====================
hasName: "Missing inverse relationships"
hasCode: "P13"
hasDescription: "This pitfall appears when a relationship (except for the symmetric ones) has not an inverse relationship defined within the ontology. For example, the case in which the ontology developer omits the inverse definition between the relations \"hasLanguageCode\" and \"isCodeOf\", or between \"hasReferee\" and \"isRefereeOf\"."
hasNumberAffectedElements: "18"
hasImportanceLevel: "Minor"
type: <http://www.oeg-upm.net/oops#pitfall>
====================
hasName: "Creating unconnected ontology elements"
hasCode: "P04"
hasDescription: "Ontology elements (classes, relationships or attributes) are created with no relation to the rest of the ontology. An example of this type of pitfall is to create the relationship \"memberOfTeam\" and to miss the class representing teams; thus, the relationship created is isolated in the ontology."
hasNumberAffectedElements: "2"
hasImportanceLevel: "Minor"
type: <http://www.oeg-upm.net/oops#pitfall>
====================
